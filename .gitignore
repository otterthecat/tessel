var tessel = require('tessel'); // import tessel
// Using the GPIO port (Opposite the USB power input)
// using pin 19 (aka G3), which is directly opposite of GND
var myPin = tessel.port['GPIO'].pin['G3'];

myPin.once('high', function(){});

myPin.once('low', function(){});

myPin.on('rise', function (){# Installed Node Modules #
##########################
node_modules/

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

# IDE / Editor Files #
######################
.idea/*
nbproject/*
.settings/org.eclipse.php.core.prefs
.project
.buildpath
*.sublime-project
*.sublime-workspace
*.swp

# GENERATED REPORTS #
#####################
reports/
metrics/});

myPin.on('fall', function(){});

var countdown = 10;

var interval = setInterval(function(){
	console.log('T-Minus ' + countdown);
	countdown -= 1;
	if(countdown < 0){
		console.log('BOOM');
		myPin.output(1);
		clearInterval(interval);
	}
}, 1000);